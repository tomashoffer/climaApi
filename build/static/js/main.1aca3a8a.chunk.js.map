{"version":3,"sources":["components/Header.js","components/Error.js","components/Formulario.js","components/Clima.js","App.js","reportWebVitals.js","index.js"],"names":["Header","titulo","className","href","Error","mensaje","Formulario","busqueda","guardarBusqueda","guardarConsultar","useState","error","guardarError","ciudad","pais","handleChange","e","target","name","value","onSubmit","preventDefault","trim","type","id","onChange","htmlFor","Clima","resultado","main","console","log","kelvin","parseFloat","temp","toFixed","temp_max","temp_min","App","componente","consultar","guardarResultado","useEffect","a","url","fetch","respuesta","json","cod","consultarAPI","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1aca3a8a.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Header = ({titulo}) => {\r\n    return ( \r\n        <nav>\r\n            <div className=\"nav-wrappen light-blue darken-2\">\r\n                <a href=\"#!\" className='brand-logo'>{titulo}</a>\r\n            </div>\r\n        </nav>\r\n     );\r\n}\r\n\r\nHeader.propTypes = {\r\n    titulo: PropTypes.string.isRequired\r\n}\r\n \r\nexport default Header;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Error = ({mensaje}) => {\r\n    return ( \r\n        <p className='red darken-4 error'>{mensaje}</p>\r\n     );\r\n}\r\n \r\n\r\nError.propTypes = {\r\n    mensaje: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Error;","import React, {useState} from 'react';\r\nimport Error from './Error';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Formulario = ({busqueda, guardarBusqueda, guardarConsultar}) => {\r\n\r\n    const [error, guardarError] = useState(false)\r\n\r\n    // extraer ciudad y pais\r\n    const {ciudad, pais} = busqueda;\r\n\r\n    const handleChange = e => {\r\n        //actualizar el state\r\n        guardarBusqueda({\r\n            ...busqueda,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n    \r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if(ciudad.trim() === '' || pais.trim() === ''){\r\n            guardarError(true)\r\n        }\r\n        guardarError(false)\r\n        guardarConsultar(true)\r\n    }\r\n\r\n\r\n    return ( \r\n        <form onSubmit={handleSubmit}>\r\n            { error ? <Error mensaje= 'Both fields are required' /> : null }\r\n\r\n            <div className=\"input-field col s12\">\r\n                <input \r\n                type=\"text\"\r\n                name=\"ciudad\"\r\n                id=\"ciudad\"\r\n                value={ciudad}\r\n                onChange={handleChange}\r\n                />\r\n                <label htmlFor=\"ciudad\">City: </label>\r\n            </div>\r\n\r\n            <div className=\"input-field col s12\">\r\n                <select name=\"pais\" id=\"pais\" value={pais} onChange={handleChange}>\r\n                    <option value=\"\">-- Select a Country --</option>\r\n                    <option value=\"US\">Estados Unidos</option>\r\n                    <option value=\"MX\">México</option>\r\n                    <option value=\"AR\">Argentina</option>\r\n                    <option value=\"CO\">Colombia</option>\r\n                    <option value=\"CR\">Costa Rica</option>\r\n                    <option value=\"ES\">España</option>\r\n                    <option value=\"PE\">Perú</option>\r\n                </select>\r\n                <label htmlFor=\"pais\">Country: </label>\r\n            </div>\r\n            <div className=\"input-field col s12\">\r\n                <input type=\"submit\" value='Search Weather' className=\"waves-effec waves-light btn-large btn-block yellow accent-4\"/>\r\n            </div>\r\n        </form>\r\n     );\r\n}\r\n\r\nFormulario.propTypes = {\r\n    busqueda : PropTypes.object.isRequired,\r\n    guardarBusqueda : PropTypes.func.isRequired,\r\n    guardarConsultar : PropTypes.func.isRequired,\r\n}\r\n \r\nexport default Formulario;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Clima = ({resultado}) => {\r\n    \r\n    // extraer los valores\r\n    const {name, main} = resultado;\r\n    console.log(resultado);\r\n\r\n    // sino null cada vez que cargue no va a tener resultado, por lo tanto da error\r\n    if(!name) return null;\r\n    // resultados en farengeit, hay que restar kelvin\r\n    const kelvin = 273.15;\r\n    return ( \r\n        <div className=\"card-panel white col s12\">\r\n            <div className=\"black-text\">\r\n                <h2>The weather of {name} is</h2>\r\n                <p className=\"temperatura\">\r\n                    { parseFloat(main.temp - kelvin, 10).toFixed(2) } <span>&#x2103;</span>  \r\n                </p>\r\n                <p>Maximum Temperature:\r\n                    { parseFloat(main.temp_max - kelvin, 10).toFixed(2) } <span>&#x2103;</span>  \r\n                </p>\r\n                <p>Minimum Temperature:\r\n                    { parseFloat(main.temp_min - kelvin, 10).toFixed(2) } <span>&#x2103;</span>  \r\n                </p>\r\n            </div>\r\n        </div>\r\n        \r\n     );\r\n}\r\n \r\nClima.propTypes = {\r\n    resultado: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Clima;","import React, {Fragment, useState, useEffect} from 'react';\nimport Header from './components/Header';\nimport Formulario from './components/Formulario';\nimport Clima from './components/Clima';\nimport Error from './components/Error';\n\n\nfunction App() {\n\n   // state del Formulario\n  const [busqueda, guardarBusqueda] = useState({\n      ciudad:'',\n       pais:''\n  });\n\n  const [consultar, guardarConsultar] = useState(false)\n  const [resultado, guardarResultado] = useState({})\n  const [error, guardarError] = useState(false)\n      // extraer ciudad y pais\n      const {ciudad, pais} = busqueda;\n\n      useEffect(() => {\n        const consultarAPI = async () => {\n    \n            if(consultar) {\n              const appId = '6a9ae7ee31baad6b4684ba324a381f3f';\n              const url = `https://api.openweathermap.org/data/2.5/weather?q=${ciudad},${pais}&appid=${appId}`;\n      \n              const respuesta = await fetch(url);\n              const resultado = await respuesta.json();\n      \n              guardarResultado(resultado);\n              guardarConsultar(false);\n    \n              // Detecta si hubo resultados correctos en la consulta\n    \n              if(resultado.cod === \"404\") {\n                  guardarError(true);\n              } else {\n                  guardarError(false);\n              }\n            }\n            \n        }\n        consultarAPI();\n        // eslint-disable-next-line\n      },[consultar]);\n    \n      let componente;\n      if(error) {\n        componente = <Error mensaje=\"No hay resultados\" />\n      } else {\n        componente = <Clima \n                        resultado={resultado}\n                    />\n      }\n    \n\n  return (\n    <Fragment>\n        <Header\n        titulo='Cliema React App'\n        />\n        <div className='contenedor-form'>\n          <div className='container'>\n            <div className='row'>\n              <div className='col m6 s12'>\n                <Formulario\n                busqueda={busqueda}\n                guardarBusqueda={guardarBusqueda}\n                guardarConsultar={guardarConsultar}\n                />\n              </div>\n              <div className='col m6 s12'>\n                {componente}\n              </div>\n            </div>\n          </div>\n\n        </div>\n    </Fragment>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}